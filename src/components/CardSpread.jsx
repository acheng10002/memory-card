import { useState } from "react";
import Card from "./Card.jsx";

// pokemonName array of pokemon to appear on Card components
const pokemonSet = [
  "pikachu",
  "charizard",
  "bulbasaur",
  "squirtle",
  "eevee",
  "mewtwo",
  "jigglypuff",
  "lucario",
  "gengar",
  "snorlax",
  "greninja",
  "meowth",
];

function CardSpread() {
  // states that manages the shuffledPokemonSet array
  const [shuffledPokemonSet, setShuffledPokemonSet] = useState(
    shuffleSet(pokemonSet)
  );

  // shuffle set logic
  function shuffleSet(array) {
    return (
      array
        /* .map creates a new array where each element is turned into an object
        with two properties, value and sort
        sort is assigned a random number generated by Math.random */
        .map((value) => ({ value, sort: Math.random() }))
        /* sorts the array of objects created in the previous step
          .sort compares the sort property of each object
          if a.sort is smaller, the element comes before, 
          if it's larger, it comes after */
        .sort((a, b) => a.sort - b.sort)
        /* ({ value }) destructures the object and extracts just the 
          value properties from the array of objects,
          returning just the shuffled values in their new order */
        .map(({ value }) => value)
    );
  }

  // handles clicks: reshuffles the pokemon and updates state
  const handleClick = () => {
    const newShuffledSet = shuffleSet(shuffledPokemonSet);
    // triggers re-render causing cards to be displayed in a new order
    setShuffledPokemonSet(newShuffledSet);
  };

  return (
    <div className="card-spread">
      {/* for each pokemon in the shuffledPokemonSet, create a 
        Card component with a key, pokemonName prop (that will be passed
        to the PokemonImage component), and handleClick prop */}
      {shuffledPokemonSet.map((pokemonName) => (
        <Card
          key={pokemonName}
          pokemonName={pokemonName}
          handleClick={handleClick}
        />
      ))}
    </div>
  );
}

export default CardSpread;
